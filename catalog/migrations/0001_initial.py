# Generated by Django 5.2.4 on 2025-07-29 14:08

import catalog.models
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la catégorie')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='catalog/categories/', verbose_name='Image de la catégorie')),
                ('est_active', models.BooleanField(default=True, verbose_name='Active')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True, verbose_name='Référence')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom du produit')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description complète')),
                ('resume', models.CharField(blank=True, max_length=255, verbose_name='Résumé')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Prix unitaire')),
                ('prix_promotionnel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Prix promotionnel')),
                ('en_stock', models.BooleanField(default=True, verbose_name='En stock')),
                ('quantite', models.PositiveIntegerField(default=0, verbose_name='Quantité disponible')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('est_nouveau', models.BooleanField(default=False, verbose_name='Nouveau produit')),
                ('est_meilleur_vente', models.BooleanField(default=False, verbose_name='Meilleure vente')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('date_publication', models.DateTimeField(blank=True, null=True, verbose_name='Date de publication')),
                ('meta_titre', models.CharField(blank=True, max_length=70, verbose_name='Méta-titre (SEO)')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Méta-description (SEO)')),
                ('categorie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produits', to='catalog.categorie', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ImageProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=catalog.models.product_image_path, verbose_name='Image')),
                ('legende', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('est_principale', models.BooleanField(default=False, verbose_name='Image principale')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('date_ajout', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalog.produit', verbose_name='Produit associé')),
            ],
            options={
                'verbose_name': 'Image de produit',
                'verbose_name_plural': 'Images de produits',
                'ordering': ['ordre', 'date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='CaracteristiqueProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la caractéristique')),
                ('valeur', models.CharField(max_length=255, verbose_name='Valeur')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caracteristiques', to='catalog.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Caractéristique produit',
                'verbose_name_plural': 'Caractéristiques produits',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='AvisProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note (sur 5)')),
                ('titre', models.CharField(max_length=200, verbose_name="Titre de l'avis")),
                ('commentaire', models.TextField(verbose_name='Commentaire')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('approuve', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avis_produits', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avis', to='catalog.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Avis produit',
                'verbose_name_plural': 'Avis produits',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['id', 'slug'], name='catalog_pro_id_877bba_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['nom'], name='catalog_pro_nom_8686b9_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['-date_creation'], name='catalog_pro_date_cr_1a804a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='avisproduit',
            unique_together={('produit', 'utilisateur')},
        ),
    ]
